// <auto-generated />
using DemoWebFlood.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoWebFlood.Migrations
{
    [DbContext(typeof(ManyToManyContext))]
    [Migration("20221116164100_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemoWebFlood.Models.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("DemoWebFlood.Models.PostType", b =>
                {
                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeFloodId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostId", "TypeFloodId");

                    b.HasIndex("TypeFloodId");

                    b.ToTable("PostType");
                });

            modelBuilder.Entity("DemoWebFlood.Models.TypeFlood", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeFloods");
                });

            modelBuilder.Entity("DemoWebFlood.Models.PostType", b =>
                {
                    b.HasOne("DemoWebFlood.Models.Post", "Post")
                        .WithMany("PostsType")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoWebFlood.Models.TypeFlood", "TypeFlood")
                        .WithMany("PostTypesFlood")
                        .HasForeignKey("TypeFloodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("TypeFlood");
                });

            modelBuilder.Entity("DemoWebFlood.Models.Post", b =>
                {
                    b.Navigation("PostsType");
                });

            modelBuilder.Entity("DemoWebFlood.Models.TypeFlood", b =>
                {
                    b.Navigation("PostTypesFlood");
                });
#pragma warning restore 612, 618
        }
    }
}
